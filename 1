#!/usr/bin/env bash
#
# Solana Validator simple console "dashboard" script by Netwers, 2021-2024.
#
#

scriptPath=`cd "$(dirname "${BASH_SOURCE[0]}")" && pwd -P`
source "${scriptPath}/env.sh"
echo
date

        if [[ ! -z $validatorPath ]] || [[ "$validatorPath" == "" ]]; then
		echo "Validator path is not specified, can not to proceed. Please check it in env.sh file."
	else

		if [[ ! -z $snapshotsPath ]]; then
			echo "Snapshots path is not specified, please check it in env.sh file."
			exit 0
		fi
		if [[ ! -z $accountsPath ]]; then
                        echo "Accounts path is not specified, please check it in env.sh file."
                        exit 0
                fi
                if [[ ! -z $accounts_hash_cachePath ]]; then
                        echo "Accounts hash cache path is not specified, please check it in env.sh file."
                        exit 0
                fi
                if [[ ! -z $ledgerPath ]]; then
                        echo "Ledger path is not specified, please check it in env.sh file."
                        exit 0
                fi		

                while true; do

			echo "Stopping solana service ($systemSolanaService)..."
			#sudo service $systemSolanaService stop
			echo "[$colorGreen OK $colorEnd]"

                        read -p "Do you want to delete snapshots also? (y/n) " yn
                        case $yn in
				[yY] ) echo -n "Removing snapshots... ";
					echo "[$colorGreen OK $colorEnd]"
					#rm -rf $snapshotsPath/*
					break;;

                                [nN] ) echo "Proceeding without deleting snapshots...";

					echo -n "Removing accounts... ";
					#rm -rf $accountsPath/*
					echo "[$colorGreen OK $colorEnd]"

					echo -n "Removing accounts hashes... ";
					#rm -rf $accounts_hash_cachePath/*
					echo "[$colorGreen OK $colorEnd]"

					echo -n "Removing ledger... ";
					#rm -rf $ledgerPath/*
					echo "[$colorGreen OK $colorEnd]"

					break;;

                                * ) echo "Invalid response";;
                        esac
                done
	
	fi


echo "Done"
